Import('envs')

# Create our library/s
lib_dict = dict()
for e in envs:
	if '-' in e['SPECIFIC_BUILD']:
		path = e['SPECIFIC_BUILD'].replace('-', '/', 1)	# Only replace the first -
	else:
		path = e['SPECIFIC_BUILD'] + '/default'
	build_dir = 'build/'+ path
	code_dir = 'code/dreamcast'	# TODO: Modify this once the pre-processing script is sorted
	e.VariantDir(build_dir, code_dir, duplicate = 0)	# Kind of moves over the processing for the code
														# directory to our build dir duplicate=0 means it
														# won't duplicate the src files

	prog_files = Glob(build_dir + '/*.c') # We have to specify the build path instead of the real one
	
	# We override CPPPATH our output is nice
	lib_dict[e['SPECIFIC_BUILD']] = e.Library(
		target = 'lib/' + path + '/Crayon',
		source = prog_files,
		CPPPATH = '${CRAYON_BASE}/include/crayon'
	)

Return('lib_dict')	# Used in the projects to properly link
